group 'org.mkscc.igo.pi'
version '1.3-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'idea'
apply plugin: 'maven'
apply plugin: 'org.springframework.boot'

mainClassName = "org.mskcc.igo.pi.external.rest.Application"

sourceCompatibility = 1.8
targetCompatibility = 1.8

buildscript {
    def springVersion='1.5.9.RELEASE'

    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: springVersion
    }
}

repositories {
    mavenCentral()
    mavenLocal()
    maven { url "${nexusUrlReleases}" }
    maven { url "${nexusUrlSnapshots}" }
}

dependencies {
    compile group: 'org.mskcc.common', name:'common-domain', version: '2.9.0'
    compile group: 'com.opencsv', name: 'opencsv', version: '4.1'

    compile ('org.springframework.boot:spring-boot-starter-log4j2')

    compile('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    compile("org.springframework.boot:spring-boot-starter-data-jpa"){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    compile("org.springframework.boot:spring-boot-starter-security"){
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    compile group: 'javax.persistence', name: 'javax.persistence-api', version: '2.2'

    compile ('javax.servlet:jstl:1.2')

    compile 'mysql:mysql-connector-java:5.1.20'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile ("org.mockito:mockito-core:1.10.19")
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile 'org.hamcrest:hamcrest-all:1.3'
    testCompile 'org.hamcrest:hamcrest-core:1.3'
}

bootRun {
    systemProperties = System.properties

    if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5007'
    }

}

run {
    systemProperties = System.properties
}

uploadArchives {
    repositories {
        mavenDeployer {
            repository(
                    url: "${nexusUrlReleases}") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
            snapshotRepository(
                    url: "${nexusUrlSnapshots}") {
                authentication(userName: nexusUsername, password: nexusPassword)
            }
        }
    }
}


